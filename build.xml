<?xml version="1.0"?>

<project name="Catchis"
         default="test-batch" basedir=".">

	<!-- Project settings -->
	<property name="user.name" value="timmy"/>
	<property name="project.name" value="${ant.project.name}"/>
	<property name="project.distname" value="catechis"/>
	<property name="project.version" value="1.3"/>
	<property name="project.version.jar" value="1.3"/>
	<property name="jarfile.name" value="${project.distname}-${project.version}.jar"/>
	<property name="jarfile.path" location="${dist.dir}/${jarfile.name}"/>

  <property name="junit.fork" value="true"/>

  <path id="compile.classpath">
    <pathelement location="${lucene.jar}"/>
    <pathelement location="${tidy.jar}"/>
    <pathelement path ="lib/commons-beanutils.jar"/>
    <pathelement path ="lib/commons-collections.jar"/>
    <pathelement path ="lib/commons-logging.jar"/>
    <pathelement path ="lib/commons-lang-2.1.jar"/>
    <pathelement path ="lib/servlet.jar"/>
    <pathelement path ="lib/servlet-api.jar"/>
    <pathelement path ="lib/jdom.jar"/>
    <pathelement path ="lib/xerces.jar"/>
    <pathelement path ="lib/beanviews.jar"/>
    <pathelement path ="lib/struts.jar"/>
  </path>

  <path id="test.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="/usr/lib/eclipse/dropins/jdt/plugins/org.junit4_4.3.1/junit.jar"/>
    <pathelement location="${build.dir}/classes"/>
    <pathelement location="${build.dir}/test"/>
  </path>

  <!-- Public Targets -->
  <target name="clean"
          description="Deletes all files that are generated by the build.">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <!-- Internal Targets -->
  <target name="init">
    <mkdir dir="${build.dir}/classes"/>
    <mkdir dir="${dist.dir}"/>
    <echo message="Building ${ant.project.name}"/>
    <echo message="/////////////////////////////////////////////////////"/>
    <echo message="//\\\\//\\\//\\\\\\//\\\\//\\\//\///\//\\\/\\\///////"/>
    <echo message="///\\///\///\///\\////\\////\////\///\///\//\////////"/>
    <echo message="////\\///\///\///\\////\\////\////\///\///\//\///////"/>
    <echo message="/////\\///\\\\\///\\////\\\\//\////\\\\\///\///\/////"/>
    <echo message="//////\\///\///\///\\////\\////\////\///\///\////\///"/>
    <echo message="///////\\\\/\///\///\\////\\\\//\\\//\///\//\\\/\\\//"/>
    <echo message="/////////////////////////////////////////////////////"/>
    <echo message=""/>
    <echo message="Catechis 1.3 'Sebastien'"/>
    <echo message=""/>
  </target>

  <target name="compile" depends="init">
    <javac destdir="${build.dir}/classes"
           debug="${build.debug}"
           includeAntRuntime="yes"
           srcdir="src">
      <classpath refid="compile.classpath"/>
    </javac>
  </target>
  
<!-- Build Javadoc documentation -->
    <target name="javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="./doc/api"/>
        <mkdir dir="./doc/api"/>
        <javadoc sourcepath="./src/"
            destdir="./doc/api"
            classpath="${servlet.jar}:${servlet.jar}"
            packagenames="*"
            author="true"
            private="true"
            version="true"
            windowtitle="${project.name} API Documentation"
            doctitle="&lt;h1&gt;${project.name} Documentation (Version ${project.version})&lt;/h1&gt;"
            bottom="Copyleft &#169; 2007">
            <classpath refid="compile.classpath"/>
        </javadoc>
    </target>
  

  <target name="test-init">
    <mkdir dir="${test.dir}"/>

    <copy todir="${test.dir}">
      <fileset dir="test" excludes="**/*.java"/>
    </copy>

    <delete dir="${test.data.dir}"/>
    <delete dir="${test.reports.dir}"/>
    <mkdir dir="${test.data.dir}"/>
    <mkdir dir="${test.reports.dir}"/>
  </target>

  <target name="test-compile" depends="compile,test-init">
    <javac destdir="${test.dir}"
           debug="${build.debug}"
           includeAntRuntime="yes"
           srcdir="test">
      <classpath refid="test.classpath"/>
    </javac>
  </target>

  <target name="test-summary" depends="test-compile">
    <junit printsummary="yes" haltonfailure="true">
      <classpath refid="test.classpath"/>
      <test name="org.catechis.ScoringTest"/>
    </junit>
  </target>

  <target name="test-brief" depends="test-compile">
    <junit printsummary="no" haltonfailure="true">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <test name="org.catechis.ScoringTest"/>
    </junit>
  </target>

  <target name="test-xml" depends="test-compile">
    <junit printsummary="yes" haltonfailure="true">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <test todir="${test.data.dir}"
            name="org.catechis.ScoringTest"/>
    </junit>
  </target>

  <target name="test-batch" depends="test-compile">
    <junit printsummary="withOutAndErr" haltonfailure="false">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="true"/>
      <formatter type="xml"/>
      <batchtest todir="${test.data.dir}">
        <fileset dir="${test.dir}" includes="**/*Test.class"/>
      </batchtest>
    </junit>
    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>
  </target>

  <target name="test" depends="test-compile">
    <junit printsummary="true"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="${junit.fork}">
      <classpath>
        <path refid="test.classpath"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="true"/>
      <formatter type="xml"/>
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${test.dir}" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <echo message="Generating report?"/>
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>

  <target name="junit-commandline" depends="test-compile">
    <java classname="junit.textui.TestRunner" classpathref="test.classpath">
      <arg value="org.catechis.ScoringTest"/>
    </java>
  </target>

	<target name="dist" depends="compile"
		description="make the jar file">
		<jar destfile="${dist.dir}/catechis${project.version.jar}.jar" compress="true">
			<fileset dir="${build.dir}/classes"/>
		</jar>
	</target>
    
    <target name="single" depends="compile">
    <junit printsummary="true"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="${junit.fork}">
      <classpath>
        <path refid="test.classpath"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${test.dir}" includes="**/FileSaveTestsTest.class"/>
      </batchtest>
    </junit>
    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check your head." if="test.failed"/>
    </target>

</project>
